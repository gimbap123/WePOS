<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.wepos.pos.dao.PosMainDao">
  
  <select id="getTableCount" parameterType="int" resultType="int">
    SELECT COUNT(table_code)
    FROM shop s, tables t
    WHERE s.shop_code = t.shop_code
    AND s.shop_code = #{shopCode}
    AND t.table_state!=2
  </select>
  
  <!-- 매니저 아이디로 매장 코드 구함 -->
  <select id="getShopCode" parameterType="String" resultType="int">
    SELECT shop_code
    FROM shop
    WHERE shop_code = ( select shop_code from mgr where mgr_id = #{mgrId} )
  </select>
  
  <!-- 매장 코드로 매장 정보 구함 -->
  <select id="getShop" parameterType="int" resultType="shopDto" >
    SELECT *
    FROM shop
    WHERE shop_code = #{shopCode}
  </select>
  
  <!-- 매장 코드로 매장 테이블 정보 select -->
  <select id="getTables" parameterType="int" resultType="TablesDto">
    select * 
    from tables 
    where shop_code= #{shopCode} and table_state!=2
    order by table_code asc
  </select>
  
  <!-- 매장 코드로 매장 메뉴 정보 select -->
  <select id="getProductList" parameterType="int" resultType="ProductDto">
    SELECT p.*,c.category_name
    FROM product p,category c
    WHERE p.category_code=c.category_code 
    and p.shop_code = #{shopCode}
    and c.shop_code = #{shopCode}
    order by p.product_code asc
  </select>
  
  <!-- 카테고리 이름 select -->
<!--   <select id="getCategory" parameterType="int" resultType="java.util.HashMap">
    SELECT c.category_code, c.category_name
    FROM category c, product p
    WHERE c.category_code = p.category_code
    AND c.category_code = #{categoryCode}
  </select> -->
  
  <select id="getCategory" parameterType="int" resultType="CategoryDto">
	select p.*, c.*
	from ( select category_code, count( category_code ) "countProduct"
				from product
				where shop_code = #{shopCode}
				group by category_code
				order by category_code ) p, category c
	where p.category_code = c.category_code
	and c.shop_code = #{shopCode}
  </select>
  
  
  <insert id="insertOrders" parameterType="OrdersDto">
    INSERT INTO orders 
    VALUES( orders_seq.nextval, #{shopCode}, #{tableCode}, null, #{paymentCode}, sysdate, '0')
  </insert>
  
  <insert id="insertOrdersDetail" parameterType="OrdersDetailDto">
    INSERT INTO orders_detail
    VALUES( #{orderCode}, #{productCode}, #{orderAmount}, #{orderPrice} )
  </insert>
  
  <select id="getOrderCode" resultType="int">
    SELECT max(order_code)
    FROM orders
  </select>
  
  <select id="getOrderBeforePayment" resultType="OrdersDto">
    SELECT * FROM orders
    WHERE order_state = '0'
  </select>
  
  <select id="getOrdersDetailBeforePayment" resultType="SumOrdersDetailDto">
   SELECT od.product_code, sum(od.order_amount) "sum_order_amount", sum(od.order_price) "sum_order_price", o.table_code, p.product_name
   FROM orders_detail od, orders o, product p
   WHERE od.order_code = o.order_code
   and od.product_code = p.product_code
   AND od.order_code IN ( SELECT order_code FROM orders WHERE order_state = 0 )
   group by o.table_code, od.product_code, p.product_name
   order by o.table_code, product_code
  </select>
  
  <select id="lastestOrderAmount" resultType="int">
    select order_amount
    from ( select * from orders_detail where product_code = #{productCode} order by order_code desc )
    where order_code in ( select order_code from orders where order_state = 0 and table_code = #{tableCode} )
    and rownum = 1
  </select>
  
  <!-- 삭제 할 주문 번호 -->
  <select id="getDeleteOrderCode" resultType="int" parameterType="java.util.HashMap">
    select max( order_code )
    from orders_detail
    where order_code in ( select order_code from orders where order_state = 0 and table_code = #{tableCode} )
    and product_code = #{productCode}
  </select>
  
  <!-- 주문 내역 삭제 -->
  <delete id="deleteOrdersDetail" parameterType="java.util.HashMap">
    delete from orders_detail
    where order_code = #{orderCode}
    and product_code = #{productCode}
  </delete>
  
  <!-- 주문 수량 변경 -->
  <update id="updateOrderAmount" parameterType="OrdersDetailDto">
    update orders_detail
    set order_amount = #{orderAmount}, order_price = #{orderPrice}
    where order_code = #{orderCode}
    and product_code = #{productCode}
  </update>
</mapper>
